/* tslint:disable */
/* eslint-disable */
/**
 * StoryVHandler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AudioUri } from './AudioUri';
import {
    AudioUriFromJSON,
    AudioUriFromJSONTyped,
    AudioUriToJSON,
    AudioUriToJSONTyped,
} from './AudioUri';

/**
 * 
 * @export
 * @interface MessageAudio
 */
export interface MessageAudio {
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    audio_id?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    audio_type?: number;
    /**
     * 
     * @type {AudioUri}
     * @memberof MessageAudio
     */
    audio_uri?: AudioUri;
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    start_message_id?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    end_message_id?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    start_delay?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    audio_duration?: number;
    /**
     * 
     * @type {number}
     * @memberof MessageAudio
     */
    status?: number;
}

/**
 * Check if a given object implements the MessageAudio interface.
 */
export function instanceOfMessageAudio(value: object): value is MessageAudio {
    return true;
}

export function MessageAudioFromJSON(json: any): MessageAudio {
    return MessageAudioFromJSONTyped(json, false);
}

export function MessageAudioFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageAudio {
    if (json == null) {
        return json;
    }
    return {
        
        'audio_id': json['audio_id'] == null ? undefined : json['audio_id'],
        'audio_type': json['audio_type'] == null ? undefined : json['audio_type'],
        'audio_uri': json['audio_uri'] == null ? undefined : AudioUriFromJSON(json['audio_uri']),
        'start_message_id': json['start_message_id'] == null ? undefined : json['start_message_id'],
        'end_message_id': json['end_message_id'] == null ? undefined : json['end_message_id'],
        'start_delay': json['start_delay'] == null ? undefined : json['start_delay'],
        'audio_duration': json['audio_duration'] == null ? undefined : json['audio_duration'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function MessageAudioToJSON(json: any): MessageAudio {
    return MessageAudioToJSONTyped(json, false);
}

export function MessageAudioToJSONTyped(value?: MessageAudio | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'audio_id': value['audio_id'],
        'audio_type': value['audio_type'],
        'audio_uri': AudioUriToJSON(value['audio_uri']),
        'start_message_id': value['start_message_id'],
        'end_message_id': value['end_message_id'],
        'start_delay': value['start_delay'],
        'audio_duration': value['audio_duration'],
        'status': value['status'],
    };
}

