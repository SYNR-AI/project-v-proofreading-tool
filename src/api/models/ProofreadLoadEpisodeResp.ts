/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Episode } from './Episode';
import {
    EpisodeFromJSON,
    EpisodeFromJSONTyped,
    EpisodeToJSON,
    EpisodeToJSONTyped,
} from './Episode';
import type { BaseResp } from './BaseResp';
import {
    BaseRespFromJSON,
    BaseRespFromJSONTyped,
    BaseRespToJSON,
    BaseRespToJSONTyped,
} from './BaseResp';
import type { Story } from './Story';
import {
    StoryFromJSON,
    StoryFromJSONTyped,
    StoryToJSON,
    StoryToJSONTyped,
} from './Story';

/**
 * 
 * @export
 * @interface ProofreadLoadEpisodeResp
 */
export interface ProofreadLoadEpisodeResp {
    /**
     * 
     * @type {BaseResp}
     * @memberof ProofreadLoadEpisodeResp
     */
    baseResp?: BaseResp;
    /**
     * 
     * @type {Story}
     * @memberof ProofreadLoadEpisodeResp
     */
    story?: Story;
    /**
     * 
     * @type {Episode}
     * @memberof ProofreadLoadEpisodeResp
     */
    episode?: Episode;
}

/**
 * Check if a given object implements the ProofreadLoadEpisodeResp interface.
 */
export function instanceOfProofreadLoadEpisodeResp(value: object): value is ProofreadLoadEpisodeResp {
    return true;
}

export function ProofreadLoadEpisodeRespFromJSON(json: any): ProofreadLoadEpisodeResp {
    return ProofreadLoadEpisodeRespFromJSONTyped(json, false);
}

export function ProofreadLoadEpisodeRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProofreadLoadEpisodeResp {
    if (json == null) {
        return json;
    }
    return {
        
        'baseResp': json['baseResp'] == null ? undefined : BaseRespFromJSON(json['baseResp']),
        'story': json['story'] == null ? undefined : StoryFromJSON(json['story']),
        'episode': json['episode'] == null ? undefined : EpisodeFromJSON(json['episode']),
    };
}

export function ProofreadLoadEpisodeRespToJSON(json: any): ProofreadLoadEpisodeResp {
    return ProofreadLoadEpisodeRespToJSONTyped(json, false);
}

export function ProofreadLoadEpisodeRespToJSONTyped(value?: ProofreadLoadEpisodeResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'baseResp': BaseRespToJSON(value['baseResp']),
        'story': StoryToJSON(value['story']),
        'episode': EpisodeToJSON(value['episode']),
    };
}

