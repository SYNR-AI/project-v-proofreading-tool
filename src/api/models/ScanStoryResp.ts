/* tslint:disable */
/* eslint-disable */
/**
 * StoryVHandler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BaseResp } from './BaseResp';
import {
    BaseRespFromJSON,
    BaseRespFromJSONTyped,
    BaseRespToJSON,
    BaseRespToJSONTyped,
} from './BaseResp';
import type { Story } from './Story';
import {
    StoryFromJSON,
    StoryFromJSONTyped,
    StoryToJSON,
    StoryToJSONTyped,
} from './Story';

/**
 * 
 * @export
 * @interface ScanStoryResp
 */
export interface ScanStoryResp {
    /**
     * 
     * @type {BaseResp}
     * @memberof ScanStoryResp
     */
    baseResp?: BaseResp;
    /**
     * 
     * @type {Array<Story>}
     * @memberof ScanStoryResp
     */
    stories?: Array<Story>;
    /**
     * 
     * @type {boolean}
     * @memberof ScanStoryResp
     */
    has_more?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ScanStoryResp
     */
    next_cursor?: number;
}

/**
 * Check if a given object implements the ScanStoryResp interface.
 */
export function instanceOfScanStoryResp(value: object): value is ScanStoryResp {
    return true;
}

export function ScanStoryRespFromJSON(json: any): ScanStoryResp {
    return ScanStoryRespFromJSONTyped(json, false);
}

export function ScanStoryRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanStoryResp {
    if (json == null) {
        return json;
    }
    return {
        
        'baseResp': json['baseResp'] == null ? undefined : BaseRespFromJSON(json['baseResp']),
        'stories': json['stories'] == null ? undefined : ((json['stories'] as Array<any>).map(StoryFromJSON)),
        'has_more': json['has_more'] == null ? undefined : json['has_more'],
        'next_cursor': json['next_cursor'] == null ? undefined : json['next_cursor'],
    };
}

export function ScanStoryRespToJSON(json: any): ScanStoryResp {
    return ScanStoryRespToJSONTyped(json, false);
}

export function ScanStoryRespToJSONTyped(value?: ScanStoryResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'baseResp': BaseRespToJSON(value['baseResp']),
        'stories': value['stories'] == null ? undefined : ((value['stories'] as Array<any>).map(StoryToJSON)),
        'has_more': value['has_more'],
        'next_cursor': value['next_cursor'],
    };
}

