/* tslint:disable */
/* eslint-disable */
/**
 * StoryVHandler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageAudio } from './MessageAudio';
import {
    MessageAudioFromJSON,
    MessageAudioFromJSONTyped,
    MessageAudioToJSON,
    MessageAudioToJSONTyped,
} from './MessageAudio';
import type { StoryCharacter } from './StoryCharacter';
import {
    StoryCharacterFromJSON,
    StoryCharacterFromJSONTyped,
    StoryCharacterToJSON,
    StoryCharacterToJSONTyped,
} from './StoryCharacter';
import type { CharacterFace } from './CharacterFace';
import {
    CharacterFaceFromJSON,
    CharacterFaceFromJSONTyped,
    CharacterFaceToJSON,
    CharacterFaceToJSONTyped,
} from './CharacterFace';

/**
 * 
 * @export
 * @interface EpisodeMessage
 */
export interface EpisodeMessage {
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    message_id?: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    message_type?: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    story_id?: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    episode_id?: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    sender_id?: number;
    /**
     * 
     * @type {StoryCharacter}
     * @memberof EpisodeMessage
     */
    sender?: StoryCharacter;
    /**
     * 
     * @type {string}
     * @memberof EpisodeMessage
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof EpisodeMessage
     */
    cover_url?: string;
    /**
     * 
     * @type {string}
     * @memberof EpisodeMessage
     */
    audio_url?: string;
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    created_at?: number;
    /**
     * 
     * @type {number}
     * @memberof EpisodeMessage
     */
    parent_message_id?: number;
    /**
     * 
     * @type {Array<EpisodeMessage>}
     * @memberof EpisodeMessage
     */
    next?: Array<EpisodeMessage>;
    /**
     * 
     * @type {Array<CharacterFace>}
     * @memberof EpisodeMessage
     */
    character_faces?: Array<CharacterFace>;
    /**
     * 
     * @type {Array<MessageAudio>}
     * @memberof EpisodeMessage
     */
    message_audios?: Array<MessageAudio>;
}

/**
 * Check if a given object implements the EpisodeMessage interface.
 */
export function instanceOfEpisodeMessage(value: object): value is EpisodeMessage {
    return true;
}

export function EpisodeMessageFromJSON(json: any): EpisodeMessage {
    return EpisodeMessageFromJSONTyped(json, false);
}

export function EpisodeMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): EpisodeMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'message_id': json['message_id'] == null ? undefined : json['message_id'],
        'message_type': json['message_type'] == null ? undefined : json['message_type'],
        'story_id': json['story_id'] == null ? undefined : json['story_id'],
        'episode_id': json['episode_id'] == null ? undefined : json['episode_id'],
        'sender_id': json['sender_id'] == null ? undefined : json['sender_id'],
        'sender': json['sender'] == null ? undefined : StoryCharacterFromJSON(json['sender']),
        'message': json['message'] == null ? undefined : json['message'],
        'cover_url': json['cover_url'] == null ? undefined : json['cover_url'],
        'audio_url': json['audio_url'] == null ? undefined : json['audio_url'],
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'parent_message_id': json['parent_message_id'] == null ? undefined : json['parent_message_id'],
        'next': json['next'] == null ? undefined : ((json['next'] as Array<any>).map(EpisodeMessageFromJSON)),
        'character_faces': json['character_faces'] == null ? undefined : ((json['character_faces'] as Array<any>).map(CharacterFaceFromJSON)),
        'message_audios': json['message_audios'] == null ? undefined : ((json['message_audios'] as Array<any>).map(MessageAudioFromJSON)),
    };
}

export function EpisodeMessageToJSON(json: any): EpisodeMessage {
    return EpisodeMessageToJSONTyped(json, false);
}

export function EpisodeMessageToJSONTyped(value?: EpisodeMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message_id': value['message_id'],
        'message_type': value['message_type'],
        'story_id': value['story_id'],
        'episode_id': value['episode_id'],
        'sender_id': value['sender_id'],
        'sender': StoryCharacterToJSON(value['sender']),
        'message': value['message'],
        'cover_url': value['cover_url'],
        'audio_url': value['audio_url'],
        'created_at': value['created_at'],
        'parent_message_id': value['parent_message_id'],
        'next': value['next'] == null ? undefined : ((value['next'] as Array<any>).map(EpisodeMessageToJSON)),
        'character_faces': value['character_faces'] == null ? undefined : ((value['character_faces'] as Array<any>).map(CharacterFaceToJSON)),
        'message_audios': value['message_audios'] == null ? undefined : ((value['message_audios'] as Array<any>).map(MessageAudioToJSON)),
    };
}

