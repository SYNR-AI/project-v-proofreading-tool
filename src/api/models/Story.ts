/* tslint:disable */
/* eslint-disable */
/**
 * StoryVHandler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Episode } from './Episode';
import {
    EpisodeFromJSON,
    EpisodeFromJSONTyped,
    EpisodeToJSON,
    EpisodeToJSONTyped,
} from './Episode';
import type { StoryTag } from './StoryTag';
import {
    StoryTagFromJSON,
    StoryTagFromJSONTyped,
    StoryTagToJSON,
    StoryTagToJSONTyped,
} from './StoryTag';
import type { StoryCharacter } from './StoryCharacter';
import {
    StoryCharacterFromJSON,
    StoryCharacterFromJSONTyped,
    StoryCharacterToJSON,
    StoryCharacterToJSONTyped,
} from './StoryCharacter';
import type { StoryCounter } from './StoryCounter';
import {
    StoryCounterFromJSON,
    StoryCounterFromJSONTyped,
    StoryCounterToJSON,
    StoryCounterToJSONTyped,
} from './StoryCounter';

/**
 * 
 * @export
 * @interface Story
 */
export interface Story {
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    story_id?: number;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    story_name?: string;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    cover_uri?: string;
    /**
     * 
     * @type {string}
     * @memberof Story
     */
    bio?: string;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    status?: number;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    story_type?: number;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    created_at?: number;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    updated_at?: number;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    user_id?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof Story
     */
    character_ids?: Array<number>;
    /**
     * 
     * @type {Array<StoryCharacter>}
     * @memberof Story
     */
    characters?: Array<StoryCharacter>;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    role_character_id?: number;
    /**
     * 
     * @type {StoryCharacter}
     * @memberof Story
     */
    role_character?: StoryCharacter;
    /**
     * 
     * @type {Array<StoryTag>}
     * @memberof Story
     */
    tags?: Array<StoryTag>;
    /**
     * 
     * @type {StoryCounter}
     * @memberof Story
     */
    counter?: StoryCounter;
    /**
     * 
     * @type {Array<Episode>}
     * @memberof Story
     */
    episodes?: Array<Episode>;
    /**
     * 
     * @type {number}
     * @memberof Story
     */
    sort_index?: number;
}

/**
 * Check if a given object implements the Story interface.
 */
export function instanceOfStory(value: object): value is Story {
    return true;
}

export function StoryFromJSON(json: any): Story {
    return StoryFromJSONTyped(json, false);
}

export function StoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Story {
    if (json == null) {
        return json;
    }
    return {
        
        'story_id': json['story_id'] == null ? undefined : json['story_id'],
        'story_name': json['story_name'] == null ? undefined : json['story_name'],
        'cover_uri': json['cover_uri'] == null ? undefined : json['cover_uri'],
        'bio': json['bio'] == null ? undefined : json['bio'],
        'status': json['status'] == null ? undefined : json['status'],
        'story_type': json['story_type'] == null ? undefined : json['story_type'],
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'updated_at': json['updated_at'] == null ? undefined : json['updated_at'],
        'user_id': json['user_id'] == null ? undefined : json['user_id'],
        'character_ids': json['character_ids'] == null ? undefined : json['character_ids'],
        'characters': json['characters'] == null ? undefined : ((json['characters'] as Array<any>).map(StoryCharacterFromJSON)),
        'role_character_id': json['role_character_id'] == null ? undefined : json['role_character_id'],
        'role_character': json['role_character'] == null ? undefined : StoryCharacterFromJSON(json['role_character']),
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(StoryTagFromJSON)),
        'counter': json['counter'] == null ? undefined : StoryCounterFromJSON(json['counter']),
        'episodes': json['episodes'] == null ? undefined : ((json['episodes'] as Array<any>).map(EpisodeFromJSON)),
        'sort_index': json['sort_index'] == null ? undefined : json['sort_index'],
    };
}

export function StoryToJSON(json: any): Story {
    return StoryToJSONTyped(json, false);
}

export function StoryToJSONTyped(value?: Story | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'story_id': value['story_id'],
        'story_name': value['story_name'],
        'cover_uri': value['cover_uri'],
        'bio': value['bio'],
        'status': value['status'],
        'story_type': value['story_type'],
        'created_at': value['created_at'],
        'updated_at': value['updated_at'],
        'user_id': value['user_id'],
        'character_ids': value['character_ids'],
        'characters': value['characters'] == null ? undefined : ((value['characters'] as Array<any>).map(StoryCharacterToJSON)),
        'role_character_id': value['role_character_id'],
        'role_character': StoryCharacterToJSON(value['role_character']),
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(StoryTagToJSON)),
        'counter': StoryCounterToJSON(value['counter']),
        'episodes': value['episodes'] == null ? undefined : ((value['episodes'] as Array<any>).map(EpisodeToJSON)),
        'sort_index': value['sort_index'],
    };
}

