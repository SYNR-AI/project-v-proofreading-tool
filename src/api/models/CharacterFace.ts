/* tslint:disable */
/* eslint-disable */
/**
 * StoryVHandler API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CharacterFace
 */
export interface CharacterFace {
    /**
     * 
     * @type {number}
     * @memberof CharacterFace
     */
    face_id?: number;
    /**
     * 
     * @type {number}
     * @memberof CharacterFace
     */
    message_id?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof CharacterFace
     */
    start_point?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof CharacterFace
     */
    end_point?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof CharacterFace
     */
    character_type?: number;
}

/**
 * Check if a given object implements the CharacterFace interface.
 */
export function instanceOfCharacterFace(value: object): value is CharacterFace {
    return true;
}

export function CharacterFaceFromJSON(json: any): CharacterFace {
    return CharacterFaceFromJSONTyped(json, false);
}

export function CharacterFaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CharacterFace {
    if (json == null) {
        return json;
    }
    return {
        
        'face_id': json['face_id'] == null ? undefined : json['face_id'],
        'message_id': json['message_id'] == null ? undefined : json['message_id'],
        'start_point': json['start_point'] == null ? undefined : json['start_point'],
        'end_point': json['end_point'] == null ? undefined : json['end_point'],
        'character_type': json['character_type'] == null ? undefined : json['character_type'],
    };
}

export function CharacterFaceToJSON(json: any): CharacterFace {
    return CharacterFaceToJSONTyped(json, false);
}

export function CharacterFaceToJSONTyped(value?: CharacterFace | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'face_id': value['face_id'],
        'message_id': value['message_id'],
        'start_point': value['start_point'],
        'end_point': value['end_point'],
        'character_type': value['character_type'],
    };
}

